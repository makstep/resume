{"version":3,"sources":["contexts/Locale.js","constants.js","images/portaint.jpg","components/UIKit/LanguageSwitcher.jsx","components/UIKit/ExperienceDates.jsx","components/UIKit/index.js","components/UIKit/shared.js","components/Internalization.jsx","components/stories/Person.jsx","components/stories/Experience/Teleport.jsx","components/stories/Experience/SocialChecker.jsx","components/stories/Experience/TopUnits.jsx","components/stories/Experience/OneRetarget.jsx","components/stories/Experience/SelfEducation.jsx","components/stories/Experience/W1D1.jsx","components/stories/Experience.jsx","components/stories/Common/Education.jsx","components/stories/Common/Languages.jsx","components/stories/Common.jsx","components/stories/FullStory.jsx","components/stories/Title.jsx","components/Resume.jsx","containers/App.js","serviceWorker.js","index.js","routes.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_constants__WEBPACK_IMPORTED_MODULE_1__","Locale","createContext","defaultLocale","d","__webpack_exports__","RU_LOCALE","EN_LOCALE","MAX_CONTAINER_WIDTH","TEXT_MAX_WIDTH","MOBILE_MEDIA_QUERY_WIDTH","IPAD_MEDIA_QUERY_WIDTH","module","exports","p","Wrapper","styled","div","_templateObject","LanguageLink","NavLink","_templateObject2","_ref","isSelected","_ref2","_props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","to","routes","window","location","pathname","ISO_DATE_REGEXP","ExperienceDates","rawFrom","from","rawTo","convertDatePropsToLuxon","locale","useContext","LocaleContext","fromString","toFormat","toString","monthInteval","_","round","Interval","fromDateTimes","length","ExperienceDatesWrapper","ExperienceDatesRange","ExperienceDatesInWords","months","includes","pluralityFormOfMonths","raw","NOW","DateTime","local","isString","match","fromISO","Error","Object","defineProperty","enumerable","configurable","writable","value","_templateObject3","LanguageSwitcher","require","default","H1","h1","H2","h2","H2SubHeader","span","_templateObject4","H3","h3","_templateObject5","H3SubHeader","_templateObject6","AboutSection","_templateObject7","_templateObject8","FaceImage","_templateObject9","image","Contacts","_templateObject10","ContactColumn","_templateObject11","ContactName","_templateObject12","ContactValue","_templateObject13","AboutText","_templateObject14","ExperienceSection","_templateObject15","Experience","_templateObject16","ExperienceDescription","_templateObject17","Bold","_templateObject18","Link","_templateObject19","Table","_templateObject20","TableRow","_templateObject21","TableRowName","_templateObject22","TableRowValue","_templateObject23","TableRowValueList","_templateObject24","TableRawValueListItem","_templateObject25","TableRowValueAsList","react_default","map","text","index","key","TableRowValueLink","_templateObject26","CommonSection","_templateObject27","ListHeader","_templateObject28","List","ol","_templateObject29","ListItem","li","_templateObject30","Internalization_templateObject","Internalization","props","componentRenderer","locales","isUndefined","Shared","name","about","phoneField","feceImage","href","concat","contacts","email","phone","target","telegram_username","github_username","ruProps","enProps","Person","header","freelance","description","rebranding","technologiesField","tasksField","achievementsField","linkField","tasks","achievements","task","Teleport","Teleport_Shared","networksField","achievement","SocialChecker_Shared","trafficLight","weddingERP","weddingMobile","weddingCatalog","realEstate","positionField","position","llc","react","TopUnits","TopUnits_Shared","companyName","processField","adNetworksField","OneRetarget","OneRetarget_Shared","SelfEducation","SelfEducation_Shared","W1D1","W1D1_Shared","experienceRange","SocialChecker_Teleport","Experience_Shared","secondarySpecialEducationField","secondarySpecialEducationValue","highEducationField","highEducationValue","Languages","Education_Shared","russianField","russianValue","englishField","englishValue","Languaged","Languages_Shared","Common","Common_Shared","FullStory","Experience_Experience","react_document_title_default","title","Resume","Title_FullStory","App","route","Route","exact","path","render","Provider","className","BrowserRouter","basename","Redirect","this","routeWithLocale","Component","Boolean","hostname","renderSnapshot","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","baseURL","ru","en","root","routeWithBaseURL","_constants__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/main.56edd4c1.chunk.js","sourcesContent":["import { createContext } from 'react';\nimport { RU_LOCALE as defaultLocale } from '../constants'\n\nconst Locale = createContext(defaultLocale);\n\nexport default Locale;\n","// flow\n\nexport const RU_LOCALE = 'ru';\nexport const EN_LOCALE = 'en';\n\nexport const ALLOWED_LOCALES = [RU_LOCALE, EN_LOCALE];\n\nexport const MAX_CONTAINER_WIDTH = 1000;\n\nexport const TEXT_MAX_WIDTH = 780;\nexport const MOBILE_MEDIA_QUERY_WIDTH = 514;\nexport const IPAD_MEDIA_QUERY_WIDTH = 768;\n","module.exports = __webpack_public_path__ + \"static/media/portaint.0506dfe5.jpg\";","// @flow\nimport React from 'react';\n\n// Libs\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\n// Routes\nimport * as routes from '../../routes';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: 28px;\n  width: 70px;\n  border-bottom: 1px solid #000000;\n\n  @media print {\n    display: none;\n  }\n`;\n\nconst LanguageLink = styled(NavLink)`\n  font-style: normal;\n  font-weight: 300;\n  font-size: 22px;\n  line-height: 24px;\n  text-decoration: none;\n\n  color: ${({ isSelected }) => (isSelected ? '#000000' : '#E2E2E2')};\n  cursor: ${({ isSelected }) => (isSelected ? 'default' : 'pointer')};\n`;\n\nexport default function(_props: any) {\n  return (\n    <Wrapper>\n      <LanguageLink\n        to={routes.ru}\n        isSelected={\n          window.location.pathname === routes.routeWithBaseURL(routes.ru)\n        }\n      >\n        RU\n      </LanguageLink>\n      <LanguageLink\n        to={routes.en}\n        isSelected={\n          window.location.pathname === routes.routeWithBaseURL(routes.en)\n        }\n      >\n        EN\n      </LanguageLink>\n    </Wrapper>\n  );\n}\n","// @flow\nimport React, { useContext } from 'react';\n\n// Libs\nimport _ from 'lodash';\nimport { Interval, DateTime } from 'luxon';\nimport styled from 'styled-components';\n\n// Components\nimport LocaleContext from '../../contexts/Locale';\n\n// Constants\nimport { RU_LOCALE, EN_LOCALE } from '../../constants';\n\n// REGEXP\nconst ISO_DATE_REGEXP = /^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])(T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(.[0-9]+)?(Z)?)*$/;\n\n// Types\ntype Props = {\n  from: string,\n  to: string\n};\n\nexport default function ExperienceDates({ from: rawFrom, to: rawTo }: Props) {\n  const from = convertDatePropsToLuxon(rawFrom);\n  const to = convertDatePropsToLuxon(rawTo);\n\n  const locale = useContext(LocaleContext);\n\n  const fromString = from.toFormat('y.MM');\n  const toString = to.toFormat('y.MM');\n  const monthInteval = _.round(\n    Interval.fromDateTimes(from, to).length('months')\n  );\n\n  return (\n    <ExperienceDatesWrapper>\n      <ExperienceDatesRange>\n        {fromString} - {toString}\n      </ExperienceDatesRange>\n      <ExperienceDatesInWords>\n        {monthInteval} {pluralityFormOfMonths(monthInteval, locale)}\n      </ExperienceDatesInWords>\n    </ExperienceDatesWrapper>\n  );\n}\n\nfunction convertDatePropsToLuxon(raw: string): Object {\n  if (raw === ExperienceDates.NOW) return DateTime.local();\n  if (_.isString(raw) && raw.match(ISO_DATE_REGEXP))\n    return DateTime.fromISO(raw);\n  if (raw instanceof DateTime) return raw;\n\n  throw new Error('Date format is not mached');\n}\n\nfunction pluralityFormOfMonths(months: number, locale: string) {\n  // TODO: refactor\n  if (locale === RU_LOCALE) {\n    if (months === 1) return 'месяц';\n    if (_.includes([2, 3, 4], months)) return 'месяца';\n    return 'месяцев';\n  }\n\n  if (locale === EN_LOCALE) {\n    if (months === 1) {\n      return 'month';\n    } else {\n      return 'months';\n    }\n  }\n}\n\nObject.defineProperty(ExperienceDates, 'NOW', {\n  enumerable: false,\n  configurable: false,\n  writable: false,\n  value: 'NOW'\n});\n\nconst ExperienceDatesWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-top: 2px;\n`;\n\nconst ExperienceDatesRange = styled.div`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 20px;\n  color: #787878;\n`;\n\nconst ExperienceDatesInWords = styled.div`\n  margin-left: 15px;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 20px;\n  color: #787878;\n`;\n","// @flow\n\nimport React from 'react';\n\n// Libs\nimport styled from 'styled-components';\n\n// Constants\nimport { textColor, grayTextColor } from './shared';\nimport {\n  TEXT_MAX_WIDTH,\n  MAX_CONTAINER_WIDTH,\n  MOBILE_MEDIA_QUERY_WIDTH,\n  IPAD_MEDIA_QUERY_WIDTH\n} from '../../constants';\n\nexport const LanguageSwitcher = require('./LanguageSwitcher').default;\nexport const ExperienceDates = require('./ExperienceDates').default;\n\nexport const Wrapper = styled.div`\n  max-width: ${MAX_CONTAINER_WIDTH}px;\n  margin: 0 auto;\n  margin-top: 20px;\n  border-radius: 3px;\n  padding: 70px 30px 30px 30px;\n  background-color: #ffffff;\n\n  @media (max-width: ${MOBILE_MEDIA_QUERY_WIDTH}px) {\n    padding: 70px 16px 30px 16px;\n  }\n`;\n\nexport const H1 = styled.h1`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 44px;\n  line-height: 1;\n  color: ${textColor};\n`;\n\nexport const H2 = styled.h2`\n  margin-top: 15px;\n  margin-bottom: 10px;\n  font-size: 32px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 38px;\n  line-height: 1;\n  color: ${textColor};\n`;\n\nexport const H2SubHeader = styled.span`\n  font-size: 18px;\n  font-weight: 400;\n  color: ${grayTextColor};\n`;\n\nexport const H3 = styled.h3`\n  font-style: normal;\n  font-weight: normal;\n  font-size: 28px;\n  line-height: 30px;\n  color: ${textColor};\n`;\n\nexport const H3SubHeader = styled.span`\n  font-size: 14px;\n  font-weight: 400;\n  color: ${grayTextColor};\n`;\n\nexport const P = styled.p`\n  margin-bottom: 10px;\n  margin-top: 5px;\n  font-size: 16px;\n  line-height: 1.2;\n  letter-spacing: 0.2px;\n  color: ${textColor};\n`;\n\nexport const AboutSection = styled.div`\n  margin-top: 35px;\n`;\n\nexport const FaceImage = styled.div`\n  margin-top: 20px;\n  width: 112px;\n  height: 152px;\n  background-color: #c4c4c4;\n  background: url(${({ image }) => image}) no-repeat center center;\n  background-size: cover;\n  border-radius: 6px;\n  transition: transform 0.2s;\n  border: 1px solid #ddd;\n\n  @media print {\n    & {\n      -webkit-print-color-adjust: exact !important;\n      color-adjust: exact !important;\n    }\n  }\n`;\n\nexport const Contacts = styled.div`\n  margin-top: 26px;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nexport const ContactColumn = styled.div`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: 25%;\n\n  @media (max-width: ${IPAD_MEDIA_QUERY_WIDTH}px) {\n    flex-basis: 50%;\n    margin-bottom: 15px;\n  }\n\n  @media (max-width: ${MOBILE_MEDIA_QUERY_WIDTH}px) {\n    flex-basis: 100%;\n    margin-bottom: 15px;\n  }\n`;\n\nexport const ContactName = styled.div`\n  font-style: normal;\n  font-weight: 300;\n  font-size: 16px;\n  line-height: 16px;\n  color: ${textColor};\n`;\n\nexport const ContactValue = styled.a`\n  display: inline-block;\n  margin-top: 3px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 16px;\n  text-decoration: none;\n  color: ${textColor};\n`;\n\nexport const AboutText = styled.div`\n  max-width: ${TEXT_MAX_WIDTH}px;\n  margin-top: 30px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: justify;\n  letter-spacing: 0.01em;\n  color: ${textColor};\n`;\n\nexport const ExperienceSection = styled.div`\n  margin-top: 65px;\n`;\n\nexport const Experience = styled.div`\n  margin-top: 46px;\n`;\n\nexport const ExperienceDescription = styled.div`\n  max-width: ${TEXT_MAX_WIDTH}px;\n  margin-top: 20px;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  text-align: justify;\n  line-height: 1.3;\n  letter-spacing: 0.2px;\n  color: ${textColor};\n`;\n\nexport const Bold = styled.span`\n  font-weight: bold;\n  color: ${textColor};\n`;\n\nexport const Link = styled.a`\n  color: ${textColor};\n`;\n\n// Table start\n\nexport const Table = styled.div`\n  margin-top: 30px;\n`;\n\nexport const TableRow = styled.div`\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: row;\n\n  @media (max-width: ${MOBILE_MEDIA_QUERY_WIDTH}px) {\n    flex-direction: column;\n  }\n`;\n\nexport const TableRowName = styled.div`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: 160px;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  color: ${textColor};\n\n  @media (max-width: ${MOBILE_MEDIA_QUERY_WIDTH}px) {\n    width: auto;\n    flex-basis: auto;\n    font-weight: bold;\n  }\n`;\n\nexport const TableRowValue = styled.div`\n  flex-grow: 1;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 20px;\n  color: ${textColor};\n`;\n\nconst TableRowValueList = styled.div``;\n\nconst TableRawValueListItem = styled.div`\n  display: inline-block;\n  margin-right: 12px;\n  color: ${textColor};\n`;\n\nexport function TableRowValueAsList({ value }: any) {\n  return (\n    <TableRowValueList>\n      {value.map((text, index) => (\n        <TableRawValueListItem key={index}>{text}</TableRawValueListItem>\n      ))}\n    </TableRowValueList>\n  );\n}\n\nexport const TableRowValueLink = styled.a`\n  color: ${textColor};\n`;\n\n// Table end\n\nexport const CommonSection = styled.div`\n  margin-top: 100px;\n`;\n\nexport const ListHeader = styled.div`\n  font-weight: bold;\n  font-size: 17px;\n  margin-bottom: 6px;\n  color: ${textColor};\n`;\n\nexport const List = styled.ol`\n  list-style-type: none;\n  list-style-position: inside;\n`;\n\nexport const ListItem = styled.li`\n  text-indent: 4px;\n  font-size: 16px;\n  color: ${textColor};\n  text-align: left;\n\n  &:before {\n    content: '- ';\n  }\n`;\n","// @flow\n\nexport const textColor = '#000000';\nexport const grayTextColor = '#cacaca';\n","// @flow\nimport React, { useContext } from 'react';\n\n// Libs\nimport styled from 'styled-components';\nimport _ from 'lodash';\n\n// React Context\nimport LocaleContext from '../contexts/Locale';\n\n// Types\nimport type { Node } from 'react';\n\ntype Props = {\n  locales: { [string]: () => Node }\n};\n\nconst Warning = styled.div`\n  background-color: red;\n  color: #fff;\n`;\n\nexport default function Internalization(props: Props) {\n  const locale = useContext(LocaleContext);\n  const { locales } = props;\n\n  const componentRenderer = locales[locale];\n\n  if (_.isUndefined(componentRenderer)) {\n    if (process.env.NODE_ENV !== 'production') {\n      return <Warning>Locale renderer not found</Warning>;\n    }\n\n    return null;\n  }\n\n  return componentRenderer();\n}\n","// @flow\nimport React from 'react';\n\n// Components\nimport {\n  AboutSection,\n  H1,\n  FaceImage,\n  Contacts,\n  ContactColumn,\n  ContactName,\n  ContactValue,\n  AboutText\n} from '../UIKit';\nimport Internalization from '../Internalization';\n\n// Constants\nimport { RU_LOCALE, EN_LOCALE } from '../../constants';\nimport contacts from '../../contacts';\n\n// Images\nimport feceImage from '../../images/portaint.jpg';\n\n// Types\ntype Props = {\n  name: string,\n  about: string,\n  phoneField: string\n};\n\nfunction Shared({ name, about, phoneField }: Props) {\n  return (\n    <AboutSection>\n      <H1>{name}</H1>\n\n      <FaceImage image={feceImage} />\n\n      <Contacts>\n        <ContactColumn>\n          <ContactName>Email</ContactName>\n          <ContactValue href={`mainto:${contacts.email}`}>\n            {contacts.email}\n          </ContactValue>\n        </ContactColumn>\n\n        <ContactColumn>\n          <ContactName>{phoneField}</ContactName>\n          <ContactValue href=\"tel:+7 (926) 284 1017\">\n            {contacts.phone}\n          </ContactValue>\n        </ContactColumn>\n\n        <ContactColumn>\n          <ContactName>Telegram</ContactName>\n          <ContactValue\n            target=\"_blank\"\n            href={`https://t.me/${contacts.telegram_username}`}\n          >\n            @{contacts.telegram_username}\n          </ContactValue>\n        </ContactColumn>\n\n        <ContactColumn>\n          <ContactName>GitHub</ContactName>\n          <ContactValue\n            target=\"_blank\"\n            href={`https://github.com/${contacts.github_username}`}\n          >\n            {contacts.github_username}\n          </ContactValue>\n        </ContactColumn>\n      </Contacts>\n\n      <AboutText>{about}</AboutText>\n    </AboutSection>\n  );\n}\n\nconst ruProps: Props = {\n  name: 'Иванов Максим',\n  about: `Пишу чистый и поддерживаемый код. \n  Разбираюсь в чужом коде и улучшаю его.\n  Люблю проектировать и стандартизировать. \n  Постоянно изучаю новые и трендовые технологии. \n  Есть опыт удалённой работы с командой в разный часовых поясах.`,\n  phoneField: 'Телефон'\n};\n\nconst enProps: Props = {\n  name: 'Maksim Ivanov',\n  about: `I write clean and maintainable code. \n  I like to see into code and to increase its quality. \n  I like to design and to standardize.\n  I always learn new and trend technologies.\n  I have remote team work experience.`,\n  phoneField: 'Phone'\n};\n\nexport default function Person(_props: Object) {\n  return (\n    <Internalization\n      locales={{\n        [RU_LOCALE]: () => <Shared {...ruProps} />,\n        [EN_LOCALE]: () => <Shared {...enProps} />\n      }}\n    />\n  );\n}\n","// @flow\nimport React from 'react';\n\n// Components\nimport Internalization from '../../Internalization';\nimport {\n  H3,\n  Experience,\n  ExperienceDates,\n  ExperienceDescription,\n  Table,\n  TableRow,\n  TableRowName,\n  TableRowValue,\n  TableRowValueAsList,\n  List,\n  ListItem,\n  ListHeader,\n  TableRowValueLink,\n  H3SubHeader\n} from '../../UIKit';\n\n// Constants\nimport { RU_LOCALE, EN_LOCALE } from '../../../constants';\n\n// Types\ntype Props = {\n  header: string,\n  freelance: string,\n  description: string,\n  rebranding: string,\n  technologiesField: string,\n  tasksField: string,\n  achievementsField: string,\n  linkField: string,\n  tasks: Array<string>,\n  achievements: Array<string>\n};\n\nfunction Shared({\n  header,\n  freelance,\n  description,\n  rebranding,\n  technologiesField,\n  tasksField,\n  achievementsField,\n  linkField,\n  tasks,\n  achievements\n}: Props) {\n  return (\n    <Experience>\n      <H3>\n        {header} <H3SubHeader>{freelance}</H3SubHeader>\n      </H3>\n\n      <ExperienceDates from={'2016-09-01'} to={'2017-01-01'} />\n\n      <ExperienceDescription>{description}</ExperienceDescription>\n      <ExperienceDescription>{rebranding}.</ExperienceDescription>\n\n      <ExperienceDescription>\n        <ListHeader>{tasksField}</ListHeader>\n        <List>\n          {tasks.map((task, index) => (\n            <ListItem key={index}>{task}</ListItem>\n          ))}\n        </List>\n      </ExperienceDescription>\n\n      <ExperienceDescription>\n        <ListHeader>{achievementsField}</ListHeader>\n        <List>\n          {achievements.map((task, index) => (\n            <ListItem key={index}>{task}</ListItem>\n          ))}\n        </List>\n      </ExperienceDescription>\n\n      <Table>\n        <TableRow>\n          <TableRowName>{linkField}:</TableRowName>\n          <TableRowValue>\n            <TableRowValueLink target=\"_blank\" href=\"https://www.golama.ru\">\n              golama.ru\n            </TableRowValueLink>\n          </TableRowValue>\n        </TableRow>\n        <TableRow>\n          <TableRowName>{technologiesField}:</TableRowName>\n          <TableRowValue>\n            <TableRowValueAsList\n              value={[\n                'React',\n                'React Native 0.37',\n                'Redux',\n                'FetchAPI',\n                'redux-persist',\n                'SwaggerUI'\n              ]}\n            />\n          </TableRowValue>\n        </TableRow>\n      </Table>\n    </Experience>\n  );\n}\n\nconst ruProps: Props = {\n  header: 'Мобильное приложение Teleport',\n  description: `Приложение курьерской доставки еды на дом из магазинов, где курьер может\n  зарегистрироваться, пройти верификацию и начать принимать заказы.\n  Разрабатывал версию под Android.`,\n  rebranding: 'В настоящее время проект называется GoLama',\n  technologiesField: 'Технологии',\n  tasksField: 'Задачи',\n  achievementsField: 'Достижения',\n  linkField: 'Ссылка',\n  freelance: 'Фриланс',\n  tasks: [\n    'Верстка по PDS шаблону',\n    'Интеграция к API бекэнда',\n    'Загружать билды в Google Play на тестирование'\n  ],\n  achievements: [\n    'Реализованы: маршрутизация экранов, регистрация, позиционирование, поиск заказа на карте.',\n    `Бизнес процессы связанные с заказом: получение заказа, процесс сбора продуктов, \n    постройка маршрута до клиента, фотографирование заказа у клиента.`\n  ]\n};\n\nconst enProps: Props = {\n  header: 'Teleport Mobile Application',\n  description: `The application of courier delivery from grocery shops to clients.\n  A courier can register, pass the verification and start taking orders.\n  I developed only for Android.`,\n  rebranding: 'Nowadays the projects rebranded as GoLama',\n  technologiesField: 'Technologies',\n  tasksField: 'Tasks',\n  achievementsField: 'Achievements',\n  linkField: 'Link',\n  freelance: 'Freelance',\n  tasks: [\n    'Implement layout from PDS files',\n    'Back-end API Integration',\n    'Build app versions and upload them to Google Play for testing'\n  ],\n  achievements: [\n    'Implemented: screen routing, registration, positioning, searching an order on the map',\n    `Business processes related to ordering: taking an order, products' collection process, \n    building a route to the client, photographing the order at the client.`\n  ]\n};\n\nexport default function Teleport(_props: any) {\n  return (\n    <Internalization\n      locales={{\n        [RU_LOCALE]: () => <Shared {...ruProps} />,\n        [EN_LOCALE]: () => <Shared {...enProps} />\n      }}\n    />\n  );\n}\n","// @flow\nimport React from 'react';\n\n// Components\nimport Internalization from '../../Internalization';\nimport {\n  H3,\n  H3SubHeader,\n  Experience,\n  ExperienceDates,\n  ExperienceDescription,\n  Table,\n  TableRow,\n  TableRowName,\n  TableRowValue,\n  TableRowValueAsList,\n  ListHeader,\n  List,\n  ListItem\n} from '../../UIKit';\n\n// Constants\nimport { RU_LOCALE, EN_LOCALE } from '../../../constants';\n\n// Types\ntype Props = {\n  header: string,\n  description: string,\n  networksField: string,\n  technologiesField: string,\n  achievementsField: string,\n  freelance: string,\n  achievements: Array<string>\n};\n\nfunction Shared({\n  header,\n  freelance,\n  description,\n  networksField,\n  technologiesField,\n  achievementsField,\n  achievements\n}: Props) {\n  return (\n    <Experience>\n      <H3>\n        {header} <H3SubHeader>{freelance}</H3SubHeader>\n      </H3>\n\n      <ExperienceDates from={'2016-09-01'} to={'2016-09-24'} />\n      <ExperienceDescription>{description}</ExperienceDescription>\n\n      <ExperienceDescription>\n        <ListHeader>{achievementsField}</ListHeader>\n        <List>\n          {achievements.map((achievement, index) => (\n            <ListItem key={index}>{achievement}</ListItem>\n          ))}\n        </List>\n      </ExperienceDescription>\n\n      <Table>\n        <TableRow>\n          <TableRowName>{networksField}:</TableRowName>\n          <TableRowValue>\n            <TableRowValueAsList\n              value={['VK', 'Twitter', 'Instagram', 'YouTube']}\n            />\n          </TableRowValue>\n        </TableRow>\n\n        <TableRow>\n          <TableRowName>{technologiesField}:</TableRowName>\n          <TableRowValue>\n            <TableRowValueAsList value={['Ruby on Rails 4', 'JQuery']} />\n          </TableRowValue>\n        </TableRow>\n      </Table>\n    </Experience>\n  );\n}\n\nconst ruProps: Props = {\n  header: 'Сервис SocialChecker',\n  description: `Сервис предлагает получить денежное вознаграждение за социальную\n  активность: лайки, репосты, просмотры видео, комментарии в сетях. Лиды и задания\n  приходят из партнерских сетей.`,\n  networksField: 'Сети',\n  technologiesField: 'Технологии',\n  achievementsField: 'Достижения',\n  freelance: 'Фриланс',\n  achievements: [\n    'Авторизация пользователя через сети для идентификации пользователя',\n    'Проверка выполнения задания',\n    'Реализована возможность посчитать просмотр на YouTube',\n    'Запланированная проверка наличия лайка и репоста после выполнения задачи'\n  ]\n};\n\nconst enProps: Props = {\n  header: 'SocialChecker Service',\n  description: `The service offers to receive a reward for social\n  activity: likes, reposts, video views, comments on networks. Leads and tasks\n  come from partners.`,\n  networksField: 'Networks',\n  technologiesField: 'Technologies',\n  achievementsField: 'Achievements',\n  freelance: 'Freelance',\n  achievements: [\n    'User authorization via social networks to identify the user',\n    'Task execution check',\n    `Implemented the ability to count the YouTube's video view`,\n    'Background task scheduler to check task done after some time'\n  ]\n};\n\nexport default function Teleport(_props: any) {\n  return (\n    <Internalization\n      locales={{\n        [RU_LOCALE]: () => <Shared {...ruProps} />,\n        [EN_LOCALE]: () => <Shared {...enProps} />\n      }}\n    />\n  );\n}\n","// @flow\nimport React, { Fragment } from 'react';\n\n// Components\nimport Internalization from '../../Internalization';\nimport {\n  H3,\n  H3SubHeader,\n  Experience,\n  ExperienceDates,\n  ExperienceDescription,\n  Bold,\n  Link,\n  Table,\n  TableRow,\n  TableRowName,\n  TableRowValue,\n  TableRowValueAsList\n} from '../../UIKit';\n\n// Constants\nimport { RU_LOCALE, EN_LOCALE } from '../../../constants';\n\n// Types\nimport type { Node } from 'react';\n\ntype Props = {\n  description: string,\n  trafficLight: Node,\n  weddingERP: Node,\n  weddingMobile: Node,\n  weddingCatalog: Node,\n  realEstate: Node,\n  positionField: string,\n  position: string,\n  technologiesField: string,\n  llc: string\n};\n\nfunction Shared({\n  description,\n  trafficLight,\n  weddingERP,\n  weddingMobile,\n  weddingCatalog,\n  realEstate,\n  positionField,\n  position,\n  technologiesField,\n  llc\n}: Props) {\n  return (\n    <Experience>\n      <H3>\n        TopUnits <H3SubHeader>{llc}</H3SubHeader>{' '}\n      </H3>\n      <ExperienceDates from={'2016-09-01'} to={'2017-12-01'} />\n      <ExperienceDescription>{description}</ExperienceDescription>\n\n      <ExperienceDescription>1. {trafficLight}</ExperienceDescription>\n      <ExperienceDescription>2. {weddingERP}</ExperienceDescription>\n      <ExperienceDescription>3. {weddingMobile}</ExperienceDescription>\n      <ExperienceDescription>4. {weddingCatalog}</ExperienceDescription>\n      <ExperienceDescription>5. {realEstate}</ExperienceDescription>\n\n      <Table>\n        <TableRow>\n          <TableRowName>{positionField}:</TableRowName>\n          <TableRowValue>{position}</TableRowValue>\n        </TableRow>\n\n        <TableRow>\n          <TableRowName>{technologiesField}:</TableRowName>\n          <TableRowValue>\n            <TableRowValueAsList\n              value={[\n                'Ruby on Rails 4/5',\n                'PostgreSQL',\n                'Nginx',\n                'Redis',\n                'React',\n                'Redux',\n                'React Native'\n              ]}\n            />\n          </TableRowValue>\n        </TableRow>\n      </Table>\n    </Experience>\n  );\n}\n\nconst ruProps: Props = {\n  description: 'Заказная разработка. Удаленная работа.',\n  trafficLight: (\n    <Fragment>\n      <Bold>Сборщик лидов и рекламный менеджер</Bold> - я присоединился к уже\n      существующему проекту. Занимался интеграцией к Google Adwords и Yandex\n      Direct, механизм переноса рекламных кампаний между рекламными площадками,\n      сбор, фильтрацию и регистрацию лидов в AmoCRM.\n    </Fragment>\n  ),\n  weddingERP: (\n    <Fragment>\n      <Bold>ERP для сети свадебных магазинов</Bold> - разработал журнал задач c\n      автоматическим планировщиком и фоновыми проверками состояния задач, график\n      сотрудников с планировщиком, страницы статистики и аналитики, интеграцию к\n      VoxImplant (возможность звонить и принимать звонки от клиентов), страницы\n      управления магазинами, страницы клиентов, финансовые отчеты, уведомления в\n      браузере о произошедших событиях в ERP в реальном времени, истории\n      клиентов.\n    </Fragment>\n  ),\n  weddingMobile: (\n    <Fragment>\n      <Bold>Мобильное приложение для ERP сети свадебных магазинов</Bold> - IOS и\n      Android приложения для сотрудников магазина. Разработал авторизацию по\n      токену, просмотр текущей примерки и клиента, а также регистрацию\n      примеренных клиентом платьев по QR коду.\n    </Fragment>\n  ),\n  weddingCatalog: (\n    <Fragment>\n      <Bold>Каталог для ERP сети свадебных магазинов</Bold>{' '}\n      <Link target=\"_blank\" href=\"https://venezia-wedding.ru\">\n        venezia-wedding.ru\n      </Link>{' '}\n      - разработал интерфейс для синхронизацией с ERP, интерфейс администратора\n      и дорабатывал систему.\n    </Fragment>\n  ),\n  realEstate: (\n    <Fragment>\n      <Bold>Портал недвижимости</Bold> - разработал парсер недвижимости с avito,\n      разделы сайта с фильтрами, отслеживание событий в браузере и передачу в\n      Google Analytics и Yandex.Metrika, генерация поисковых страниц для SEO,\n      панель администратора, калькулятор ипотеки, блок выбора квартиры в жилом\n      комплексе.\n    </Fragment>\n  ),\n  positionField: 'Позиция',\n  position: 'FullStack разработчик',\n  technologiesField: 'Технологии',\n  llc: 'ООО'\n};\n\nconst enProps: Props = {\n  description: 'Outsource development. Remote Job.',\n  trafficLight: (\n    <Fragment>\n      <Bold>Lead Collector and Ad-Manager</Bold> - I joined in the middle of the\n      development. I have made integrations to Google AdWords and YandexDirect.\n      I have implemented migration mechanism for advertising campaigns between\n      the platforms. Collecting leads, filtering and sending them to AmoCRM.\n    </Fragment>\n  ),\n  weddingERP: (\n    <Fragment>\n      <Bold>ERP for the bridal shop network</Bold> - I have implemented a task\n      journal with the automated task planner and background task tracking, the\n      employee schedule and its planner, pages of statistics and analytics,\n      integration to VoxImplant (ability to call and to answer clients), shops'\n      management, customers' pages, financial reports, real-time notification in\n      the browser of events happened in the ERP, customer history.\n    </Fragment>\n  ),\n  weddingMobile: (\n    <Fragment>\n      <Bold>Mobile application for the bridal ERP</Bold> - IOS and Android\n      applications for the store employees. I have implemented a token\n      authorization, viewing current fitting and client, registration dresses\n      fitted by a client via camera by QR code.\n    </Fragment>\n  ),\n  weddingCatalog: (\n    <Fragment>\n      <Bold>Catalog integrated to the bridal ERP</Bold>{' '}\n      <Link target=\"_blank\" href=\"https://venezia-wedding.ru\">\n        venezia-wedding.ru\n      </Link>{' '}\n      - I have implemented the synchronization mechanism to the ERP, Admin and\n      User UI.\n    </Fragment>\n  ),\n  realEstate: (\n    <Fragment>\n      <Bold>Real Estate Portal</Bold> - I have implemented a real estate parser\n      from the Avito portal, sections of detailed filters, tracking events in\n      the browser and transfer to Google Analytics and Yandex.Metrika,\n      generating large amount of search pages for SEO, admin panel, mortgage\n      calculator, apartment selection block from housing complex.\n    </Fragment>\n  ),\n  positionField: 'Position',\n  position: 'FullStack developer',\n  technologiesField: 'Technologies',\n  llc: 'LLC'\n};\n\nexport default function TopUnits(_props: any) {\n  return (\n    <Internalization\n      locales={{\n        [RU_LOCALE]: () => <Shared {...ruProps} />,\n        [EN_LOCALE]: () => <Shared {...enProps} />\n      }}\n    />\n  );\n}\n","// @flow\nimport React from 'react';\n\n// Componets\nimport Internalization from '../../Internalization';\nimport {\n  H3,\n  H3SubHeader,\n  Experience,\n  ExperienceDates,\n  ExperienceDescription,\n  Table,\n  TableRow,\n  TableRowName,\n  TableRowValue,\n  TableRowValueLink,\n  TableRowValueAsList,\n  List,\n  ListItem,\n  ListHeader\n} from '../../UIKit';\n\n// Constants\nimport { RU_LOCALE, EN_LOCALE } from '../../../constants';\n\n// Types\ntype Props = {\n  companyName: string,\n  description: string,\n  tasksField: string,\n  achievementsField: string,\n  linkField: string,\n  processField: string,\n  adNetworksField: string,\n  positionField: string,\n  position: string,\n  tasks: Array<string>,\n  achievements: Array<string>\n};\n\nfunction Shared({\n  companyName,\n  description,\n  tasksField,\n  achievementsField,\n  linkField,\n  processField,\n  positionField,\n  tasks,\n  achievements,\n  position,\n  adNetworksField\n}: Props) {\n  return (\n    <Experience>\n      <H3>\n        OneRetarget <H3SubHeader>{companyName}</H3SubHeader>\n      </H3>\n      <ExperienceDates from={'2018-02-01'} to={'2018-11-01'} />\n\n      <ExperienceDescription>{description}</ExperienceDescription>\n\n      <ExperienceDescription>\n        <ListHeader>{tasksField}</ListHeader>\n        <List>\n          {tasks.map((task, index) => (\n            <ListItem key={index}>{task}</ListItem>\n          ))}\n        </List>\n      </ExperienceDescription>\n\n      <ExperienceDescription>\n        <ListHeader>{achievementsField}</ListHeader>\n        <List>\n          {achievements.map((achievement, index) => (\n            <ListItem key={index}>{achievement}</ListItem>\n          ))}\n        </List>\n      </ExperienceDescription>\n\n      <Table>\n        <TableRow>\n          <TableRowName>{linkField}:</TableRowName>\n          <TableRowValue>\n            <TableRowValueLink target=\"_blank\" href=\"https://oneretarget.com\">\n              oneretarget.com\n            </TableRowValueLink>\n          </TableRowValue>\n        </TableRow>\n\n        <TableRow>\n          <TableRowName>{positionField}:</TableRowName>\n          <TableRowValue>{position}</TableRowValue>\n        </TableRow>\n\n        <TableRow>\n          <TableRowName>{adNetworksField}:</TableRowName>\n          <TableRowValue>\n            <TableRowValueAsList\n              value={['Facebook', 'Instagram', 'VK', 'MyTarget', 'Google']}\n            />\n          </TableRowValue>\n        </TableRow>\n\n        <TableRow>\n          <TableRowName>{processField}:</TableRowName>\n          <TableRowValue>\n            <TableRowValueAsList\n              value={[\n                'JIRA',\n                'Github',\n                'Docker',\n                'Jenkins CI',\n                'git-glow',\n                'staging'\n              ]}\n            />\n          </TableRowValue>\n        </TableRow>\n\n        <TableRow>\n          <TableRowName>Back-end:</TableRowName>\n          <TableRowValue>\n            <TableRowValueAsList\n              value={[\n                'Ruby on Rails 4/5',\n                'PostgreSQL',\n                'RSpec',\n                'Cucumber',\n                'Headless-Сhrome',\n                'dry-rb',\n                'rubocop',\n                'yard'\n              ]}\n            />\n          </TableRowValue>\n        </TableRow>\n\n        <TableRow>\n          <TableRowName>Front-end:</TableRowName>\n          <TableRowValue>\n            <TableRowValueAsList\n              value={[\n                'Webpack',\n                'React',\n                'Redux',\n                'Javascript ES7',\n                'FlowJS',\n                'PrettierJS',\n                'Styled-Components'\n              ]}\n            />\n          </TableRowValue>\n        </TableRow>\n      </Table>\n    </Experience>\n  );\n}\n\nconst ruProps: Props = {\n  description:\n    'Сервис автоматизации таргетированной рекламы и ретаргетинга из одного кабинета.',\n  companyName: 'ООО Лайк',\n  tasksField: 'Задачи',\n  achievementsField: 'Достижения',\n  positionField: 'Позиция',\n  tasks: [\n    'Реализовывать возможности рекламных сетей',\n    'Реализовывать новые рекламные форматы',\n    'Ревью кода',\n    'Отлавливать и устранять ошибки',\n    'Покрытие всех фичей интеграционными и блочными тестами',\n    'Поддерживать актуальность API рекламных сетей',\n    'Поддерживать интерфейс дружелюбным к пользователю'\n  ],\n  achievements: [\n    'Переписан front-end с JQuery на React с Redux',\n    'Переведены унифицированные функции на специфичные к сетям',\n    'Интеграции к API партнеров',\n    'Привязка собственных страниц VK и Facebook',\n    'Реализованы агентские кабинеты с разными моделями пополнения клиентских кабинетов'\n  ],\n  linkField: 'Ссылка',\n  processField: 'Процесс разработки',\n  position: 'FullStack разработчик',\n  adNetworksField: 'Рекламные сети'\n};\n\nconst enProps: Props = {\n  description:\n    'Service of automated targeting and remarketing management on different platforms in one account.',\n  companyName: 'LLC Like',\n  tasksField: 'Tasks',\n  achievementsField: 'Achievements',\n  positionField: 'Position',\n  tasks: [\n    \"To implement advertising platforms' features\",\n    'To implement new advertising formats',\n    'To review pull requests',\n    \"To catch the service's errors\",\n    'To cover features with integration and unit tests',\n    \"To keep advertising platforms' API to the actual version\",\n    'To keep UI friendly to a user'\n  ],\n  achievements: [\n    'Rewritten front-end from JQuery to React with Redux',\n    \"Unified features translated into platform's specific options\",\n    'Integration to partners for joint benefits',\n    'Connecting user owned VK and Facebook pages',\n    'Implemented agent sections with different models of client account replenishment'\n  ],\n  linkField: 'Link',\n  processField: 'Dev Process',\n  position: 'FullStack developer',\n  adNetworksField: 'Ad Networks'\n};\n\nexport default function OneRetarget(_props: any) {\n  return (\n    <Internalization\n      locales={{\n        [RU_LOCALE]: () => <Shared {...ruProps} />,\n        [EN_LOCALE]: () => <Shared {...enProps} />\n      }}\n    />\n  );\n}\n","// @flow\nimport React from 'react'\n\n// Components\nimport Internalization from '../../Internalization'\nimport {\n  H3,\n  Experience,\n  ExperienceDates,\n  ExperienceDescription\n} from '../../UIKit'\n\n// Constants\nimport { RU_LOCALE, EN_LOCALE } from '../../../constants'\n\n// Types\ntype Props = {\n  header: string,\n  description: string\n}\n\nfunction Shared({ header, description }: Props) {\n  return (\n    <Experience>\n      <H3>{header}</H3>\n      <ExperienceDates from={'2018-11-01'} to={'2019-08-01'} />\n\n      <ExperienceDescription>{description}</ExperienceDescription>\n    </Experience>\n  )\n}\n\nconst ruProps: Props = {\n  header: 'Фриланс (Самообразование)',\n  description: `Фриланс на Ruby проектах в страховой сфере. Изучал разработку\n  под IOS на языке Swift c основными фреймворками. Изучил инструменты\n  Sketch и Figma для проектирования интерфейсов.`\n}\n\nconst enProps: Props = {\n  header: 'Freelance (Self-Education)',\n  description: `Freelance on Ruby projects in the insurance field. \n  I learned the IOS development with Swift language on the main frameworks.\n  Also, I have learned UI tools such as Sketch and Figma.`\n}\n\nexport default function SelfEducation(_props: any) {\n  return (\n    <Internalization\n      locales={{\n        [RU_LOCALE]: () => <Shared {...ruProps} />,\n        [EN_LOCALE]: () => <Shared {...enProps} />\n      }}\n    />\n  )\n}\n","// @flow\n\nimport React from 'react';\n\n// Components\nimport Internalization from '../../Internalization';\nimport {\n  H3,\n  H3SubHeader,\n  Experience,\n  ExperienceDates,\n  ExperienceDescription,\n  Table,\n  TableRow,\n  TableRowName,\n  TableRowValue,\n  TableRowValueLink,\n  TableRowValueAsList,\n  List,\n  ListItem,\n  ListHeader\n} from '../../UIKit';\n\n// Constants\nimport { RU_LOCALE, EN_LOCALE } from '../../../constants';\n\n// Types\ntype Props = {\n  header: string,\n  description: string,\n  linkField: string,\n  position: string,\n  positionField: string,\n  tasksField: string,\n  achievementsField: string,\n  technologiesField: string,\n  tasks: Array<string>,\n  achievements: Array<string>\n};\n\nfunction Shared({\n  header,\n  description,\n  position,\n  linkField,\n  positionField,\n  tasksField,\n  achievementsField,\n  technologiesField,\n  tasks,\n  achievements\n}: Props) {\n  return (\n    <Experience>\n      <H3>\n        {header} <H3SubHeader>W1D1 inc.</H3SubHeader>\n      </H3>\n      <ExperienceDates from={'2019-08-01'} to={'2019-11-01'} />\n\n      <ExperienceDescription>{description}</ExperienceDescription>\n\n      <ExperienceDescription>\n        <ListHeader>{tasksField}</ListHeader>\n        <List>\n          {tasks.map((task, index) => (\n            <ListItem key={index}>{task}</ListItem>\n          ))}\n        </List>\n      </ExperienceDescription>\n\n      <ExperienceDescription>\n        <ListHeader>{achievementsField}</ListHeader>\n        <List>\n          {achievements.map((achievement, index) => (\n            <ListItem key={index}>{achievement}</ListItem>\n          ))}\n        </List>\n      </ExperienceDescription>\n\n      <Table>\n        <TableRow>\n          <TableRowName>{linkField}:</TableRowName>\n          <TableRowValue>\n            <TableRowValueLink target=\"_blank\" href=\"https://w1d1.com\">\n              w1d1.com\n            </TableRowValueLink>\n          </TableRowValue>\n        </TableRow>\n\n        <TableRow>\n          <TableRowName>{positionField}:</TableRowName>\n          <TableRowValue>{position}</TableRowValue>\n        </TableRow>\n\n        <TableRow>\n          <TableRowName>{technologiesField}:</TableRowName>\n          <TableRowValue>\n            <TableRowValueAsList\n              value={[\n                'React Native',\n                'GraphQL',\n                'Apollo Stack',\n                'RamdaJS',\n                'FlowJS',\n                'AWS'\n              ]}\n            />\n          </TableRowValue>\n        </TableRow>\n      </Table>\n    </Experience>\n  );\n}\n\nconst ruProps: Props = {\n  header: 'W1D1',\n  description: `Стартап из Нью-Йорка, разрабатывающий мобильное приложение, которое предоставляет \n  ежедневные челленджи в групповой среде и помогает превратить креативность в привычку.`,\n  position: 'React Native разработчик',\n  linkField: 'Ссылка',\n  tasksField: 'Задачи',\n  achievementsField: 'Достижения',\n  positionField: 'Позиция',\n  technologiesField: 'Технологии',\n  tasks: [\n    'Реализовывать гипотезы в мобильном приложении для тестирования аудиторией',\n    'Отлавливание багов и работа над стабильностью приложения',\n    'Внедрять новые возможности на сайте администрирования контента',\n    'Внедрение современных технологий'\n  ],\n  achievements: [\n    'Запуск тестирования в компаниях: Intercom, Yandex, Miro, Mos.ru, Aero.'\n  ]\n};\n\nconst enProps: Props = {\n  header: 'W1D1',\n  description: `Startup from New York, developing the mobile application that provides \n  daily challenges in a group environment, helping you to turn creativity into a habit.`,\n  position: 'React Native developer',\n  linkField: 'Link',\n  tasksField: 'Tasks',\n  achievementsField: 'Achievements',\n  positionField: 'Position',\n  technologiesField: 'Technologies',\n  tasks: [\n    'Implement new hypotheses in the mobile application for audience testing',\n    \"Catching bugs and stabilizing the application's executing\",\n    'Implement new features in the site of content administration',\n    'Replace old technologies with new ones'\n  ],\n  achievements: [\n    'Start testing in companies: Intercom, Yandex, Miro, Mos.ru, Aero.'\n  ]\n};\n\nexport default function W1D1(_props: any) {\n  return (\n    <Internalization\n      locales={{\n        [RU_LOCALE]: () => <Shared {...ruProps} />,\n        [EN_LOCALE]: () => <Shared {...enProps} />\n      }}\n    />\n  );\n}\n","// @flow\nimport React from 'react';\n\n// Components\nimport { H2, H2SubHeader, ExperienceSection } from '../UIKit';\nimport Internalization from '../Internalization';\n\n// Experience Components\nimport Teleport from './Experience/Teleport';\nimport SocialChecker from './Experience/SocialChecker';\nimport TopUnits from './Experience/TopUnits';\nimport OneRetarget from './Experience/OneRetarget';\nimport SelfEducation from './Experience/SelfEducation';\nimport W1D1 from './Experience/W1D1';\n\n// Constants\nimport { RU_LOCALE, EN_LOCALE } from '../../constants';\n\n// Types\ntype Props = {\n  header: string,\n  experienceRange: string\n};\n\nfunction Shared({ header, experienceRange }: Props) {\n  return (\n    <ExperienceSection>\n      <H2>\n        {header} <H2SubHeader>{experienceRange}</H2SubHeader>\n      </H2>\n\n      <W1D1 />\n      <SelfEducation />\n      <OneRetarget />\n      <TopUnits />\n      <SocialChecker />\n      <Teleport />\n    </ExperienceSection>\n  );\n}\n\nconst ruProps: Props = {\n  header: 'Опыт работы',\n  experienceRange: '2 года 5 месяцев'\n};\n\nconst enProps: Props = {\n  header: 'Experience',\n  experienceRange: '2 years 5 months'\n};\n\nexport default function Experience(_props: any) {\n  return (\n    <Internalization\n      locales={{\n        [RU_LOCALE]: () => <Shared {...ruProps} />,\n        [EN_LOCALE]: () => <Shared {...enProps} />\n      }}\n    />\n  );\n}\n","// @flow\nimport React, { Fragment } from 'react';\n\n// Components\nimport Internalization from '../../Internalization';\nimport {\n  H3,\n  Bold,\n  Experience,\n  Table,\n  TableRow,\n  TableRowName,\n  TableRowValue\n} from '../../UIKit';\n\n// Constants\nimport { RU_LOCALE, EN_LOCALE } from '../../../constants';\n\n// Types\nimport type { Node } from 'react';\n\ntype Props = {\n  header: string,\n  secondarySpecialEducationField: string,\n  secondarySpecialEducationValue: Node,\n  highEducationField: string,\n  highEducationValue: Node\n};\n\nfunction Shared({\n  header,\n  secondarySpecialEducationField,\n  secondarySpecialEducationValue,\n  highEducationField,\n  highEducationValue\n}: Props) {\n  return (\n    <Experience>\n      <H3>{header}</H3>\n      <Table>\n        <TableRow>\n          <TableRowName>{highEducationField}:</TableRowName>\n          <TableRowValue>{highEducationValue}</TableRowValue>\n        </TableRow>\n\n        <TableRow>\n          <TableRowName>{secondarySpecialEducationField}:</TableRowName>\n          <TableRowValue>{secondarySpecialEducationValue}</TableRowValue>\n        </TableRow>\n      </Table>\n    </Experience>\n  );\n}\n\nconst ruProps: Props = {\n  header: 'Образование',\n  secondarySpecialEducationField: 'Среднее специальное',\n  secondarySpecialEducationValue: (\n    <Fragment>\n      Ступинский техникум им. А.Т. Туманова. Информационные системы и\n      программирование.\n      <br />\n      2012 - 2016\n    </Fragment>\n  ),\n  highEducationField: 'Высшее (Бакалавриат)',\n  highEducationValue: (\n    <Fragment>\n      Ступинский филиал МАИ. Информатика и вычислительная техника,{' '}\n      <Bold>заочное отделение</Bold>.\n      <br />\n      2016 - 2021\n    </Fragment>\n  )\n};\n\nconst enProps: Props = {\n  header: 'Education',\n  secondarySpecialEducationField: 'Secondary Special Education',\n  secondarySpecialEducationValue: (\n    <Fragment>\n      Stupino's College named after A.T. Tumanov. Information systems and\n      programming.\n      <br />\n      2012 - 2016\n    </Fragment>\n  ),\n  highEducationField: 'High Education (Bachelor)',\n  highEducationValue: (\n    <Fragment>\n      Stupino branch of the MAI. Computer Science and Engineering,{' '}\n      <Bold>extramural department</Bold>.\n      <br />\n      2016 - 2021\n    </Fragment>\n  )\n};\n\nexport default function Languages(_props: any) {\n  return (\n    <Internalization\n      locales={{\n        [RU_LOCALE]: () => <Shared {...ruProps} />,\n        [EN_LOCALE]: () => <Shared {...enProps} />\n      }}\n    />\n  );\n}\n","// @flow\nimport React from 'react';\n\n// Components\nimport Internalization from '../../Internalization';\nimport {\n  H3,\n  Experience,\n  Table,\n  TableRow,\n  TableRowName,\n  TableRowValue\n} from '../../UIKit';\n\n// Constants\nimport { RU_LOCALE, EN_LOCALE } from '../../../constants';\n\n// Types\ntype Props = {\n  header: string,\n  russianField: string,\n  russianValue: string,\n  englishField: string,\n  englishValue: string\n};\n\nfunction Shared({\n  header,\n  russianField,\n  russianValue,\n  englishField,\n  englishValue\n}: Props) {\n  return (\n    <Experience>\n      <H3>{header}</H3>\n      <Table>\n        <TableRow>\n          <TableRowName>{russianField}:</TableRowName>\n          <TableRowValue>{russianValue}</TableRowValue>\n        </TableRow>\n\n        <TableRow>\n          <TableRowName>{englishField}:</TableRowName>\n          <TableRowValue>{englishValue}</TableRowValue>\n        </TableRow>\n      </Table>\n    </Experience>\n  );\n}\n\nconst ruProps: Props = {\n  header: 'Языки',\n  russianField: 'Русский',\n  russianValue: 'Родной',\n  englishField: 'Английский',\n  englishValue: 'Intermediate'\n};\n\nconst enProps: Props = {\n  header: 'Языки',\n  russianField: 'Russian',\n  russianValue: 'Native',\n  englishField: 'English',\n  englishValue: 'Intermediate'\n};\n\nexport default function Languaged(_props: any) {\n  return (\n    <Internalization\n      locales={{\n        [RU_LOCALE]: () => <Shared {...ruProps} />,\n        [EN_LOCALE]: () => <Shared {...enProps} />\n      }}\n    />\n  );\n}\n","// @flow\nimport React from 'react';\n\n// Components\nimport Internalization from '../Internalization';\nimport { RU_LOCALE, EN_LOCALE } from '../../constants';\nimport { H2, CommonSection } from '../UIKit';\n\n// Common Components\nimport Education from './Common/Education';\nimport Languages from './Common/Languages';\n\n// Types\ntype SharedProps = {\n  header: string\n};\n\nfunction Shared({ header }: SharedProps) {\n  return (\n    <CommonSection>\n      <H2>{header}</H2>\n\n      <Education />\n      <Languages />\n    </CommonSection>\n  );\n}\n\nconst ruProps = {\n  header: 'Общее'\n};\n\nconst enProps = {\n  header: 'Common'\n};\n\nexport default function() {\n  return (\n    <Internalization\n      locales={{\n        [RU_LOCALE]: () => <Shared {...ruProps} />,\n        [EN_LOCALE]: () => <Shared {...enProps} />\n      }}\n    />\n  );\n}\n","// @flow\n\nimport React, { Fragment } from 'react';\n\n// Components\nimport Person from './Person';\nimport Experience from './Experience';\nimport Common from './Common';\n\nexport default function FullStory(_props: any) {\n  return (\n    <Fragment>\n      <Person />\n      <Experience />\n      <Common />\n    </Fragment>\n  );\n}\n","// @flow\n\nimport React from 'react';\n\n// Libs\nimport DocumentTitle from 'react-document-title';\n\n// Components\nimport Internalization from '../Internalization';\n\n// Constants\nimport { RU_LOCALE, EN_LOCALE } from '../../constants';\n\nexport default function FullStory(_props: any) {\n  return (\n    <Internalization\n      locales={{\n        [RU_LOCALE]: () => <DocumentTitle title={'Резюме Иванова Максима'} />,\n        [EN_LOCALE]: () => <DocumentTitle title={\"Maksim Ivanov's Resume\"} />\n      }}\n    />\n  );\n}\n","// @flow\n\nimport React from 'react';\n\n// Components\nimport FullStory from './stories/FullStory';\nimport Title from './stories/Title';\n\nimport { Wrapper, LanguageSwitcher } from './UIKit';\n\nexport default function Resume(_props: any) {\n  return (\n    <Wrapper>\n      <Title />\n      <LanguageSwitcher />\n\n      <FullStory />\n    </Wrapper>\n  );\n}\n","// @flow\nimport React, { Component } from 'react';\n\n// Libs\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\n\n// Components\nimport Resume from '../components/Resume';\n\n// Routes\nimport * as routes from '../routes';\n\n// Context\nimport LocaleContext from '../contexts/Locale';\n\n// Constants\nimport { RU_LOCALE, EN_LOCALE } from '../constants';\n\nclass App extends Component<any, any> {\n  routeWithLocale(route: string, locale: string) {\n    return (\n      <Route\n        exact\n        path={route}\n        render={() => (\n          <LocaleContext.Provider value={locale}>\n            <Resume />\n          </LocaleContext.Provider>\n        )}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter basename={routes.baseURL}>\n          <div>\n            <Route\n              exact\n              path={routes.root}\n              render={() => <Redirect from={routes.root} to={routes.ru} />}\n            />\n\n            {this.routeWithLocale(routes.ru, RU_LOCALE)}\n            {this.routeWithLocale(routes.en, EN_LOCALE)}\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// @flow\nimport React from 'react';\nimport { render as renderSnapshot } from 'react-snapshot';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nrenderSnapshot(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// @flow\nimport { RU_LOCALE, EN_LOCALE } from './constants'\n\nexport const baseURL = '/resume'\n\nexport const ru = `/${RU_LOCALE}`\nexport const en = `/${EN_LOCALE}`\nexport const root = `/`\n\nexport function routeWithBaseURL(route: string): string {\n  return `${baseURL}${route}`\n}\n"],"sourceRoot":""}